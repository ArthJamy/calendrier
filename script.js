// Variable pour v√©rifier si les flocons ont d√©j√† √©t√© g√©n√©r√©s
let snowflakesGenerated = false;

// Fonction pour afficher le contenu dans une case
function revealImage(element) {
    const today = new Date(); // R√©cup√®re la date actuelle
    const currentDay = today.getDate(); // Num√©ro du jour actuel (1 √† 31)
    const currentMonth = today.getMonth(); // Mois actuel (0 = Janvier, 11 = D√©cembre)


    // R√©cup√®re le jour cliqu√© √† partir du texte de la div
    const clickedDay = parseInt(element.textContent.trim(), 10);
    
    // V√©rifie si le mois actuel est d√©cembre (11 en JS)
    if (currentMonth !== 11) {
        alert("Ce n'est pas encore d√©cembre !üòº");
        return; // Arr√™te l'ex√©cution ici
    }
    
    // V√©rifie si le jour cliqu√© est sup√©rieur au jour actuel
    if (clickedDay > currentDay) {
        alert("Sois patiente ! üòº");
        return; // Arr√™te l'ex√©cution ici
    }
    
    element.classList.add("active");

    // Si les flocons n'ont pas encore √©t√© g√©n√©r√©s, les cr√©er
    if (!snowflakesGenerated) {
        snowflakesGenerated = true; // Marque les flocons comme g√©n√©r√©s
        // G√©n√©rer les flocons √† intervalle r√©gulier
        setInterval(generateSnowflakes, 1000);
        generateSnowflakes(); // D√©marrage initial
    }
    
}

// Fonction pour g√©n√©rer des flocons sur toute la page
function generateSnowflakes() {
    const body = document.body;
    for (let i = 0; i < 35; i++) { // Ajustez le nombre de flocons
        const snowflake = document.createElement("div");
        snowflake.classList.add("snowflake");
        snowflake.textContent = "‚ùÑÔ∏è";
        snowflake.style.left = Math.random() * 100 + "vw";
        snowflake.style.fontSize = Math.random() * 20 + 10 + "px";
        snowflake.style.animationDuration = Math.random() * 5 + 5 + "s";
        snowflake.style.opacity = Math.random() * 0.7 + 0.3;
        body.appendChild(snowflake);

        // Supprime les flocons apr√®s l'animation
        setTimeout(() => snowflake.remove(), 10000);
    }
}


// script.js pour agrandir l'image
document.addEventListener('DOMContentLoaded', () => {
    const lightbox = document.getElementById('lightbox');
    const lightboxImg = document.getElementById('lightbox-img');
    const closeBtn = document.getElementById('close');
    const thumbnails = document.querySelectorAll('.thumbnail');

    // Lorsqu'on clique sur une image
    thumbnails.forEach(thumbnail => {
        thumbnail.addEventListener('click', () => {
            lightbox.style.display = 'flex';
            lightboxImg.src = thumbnail.src;
        });
    });

    // Lorsqu'on clique sur le bouton de fermeture
    closeBtn.addEventListener('click', () => {
        lightbox.style.display = 'none';
        lightboxImg.src = '';
    });

    // Fermer la lightbox en cliquant √† l'ext√©rieur de l'image
    lightbox.addEventListener('click', (e) => {
        if (e.target !== lightboxImg) {
            lightbox.style.display = 'none';
            lightboxImg.src = '';
        }
    });
});
